{"version":3,"sources":["webpack://mszgs/timetable/webpack/universalModuleDefinition","webpack://mszgs/timetable/webpack/bootstrap","webpack://mszgs/timetable/webpack/runtime/define property getters","webpack://mszgs/timetable/webpack/runtime/hasOwnProperty shorthand","webpack://mszgs/timetable/webpack/runtime/make namespace object","webpack://mszgs/timetable/./src/utils/template.ts","webpack://mszgs/timetable/./src/utils/column-data.ts","webpack://mszgs/timetable/./src/utils/day.ts","webpack://mszgs/timetable/./src/utils/grid-column-label.ts","webpack://mszgs/timetable/./src/utils/grid-row-label.ts","webpack://mszgs/timetable/./src/utils/time.ts","webpack://mszgs/timetable/./src/timetable-item.ts","webpack://mszgs/timetable/./src/utils/grid-template-builders.ts","webpack://mszgs/timetable/./src/timetable-row.ts","webpack://mszgs/timetable/./src/timetable.ts"],"names":["root","factory","exports","module","define","amd","a","undefined","mszgs","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","constructor","templateHtmlString","_templateHtmlString","_template","document","createElement","innerHTML","addStyle","styleString","style","template","appendChild","clone","deep","content","cloneNode","ColumnData","row","start","denominator","span","_row","_start","_denominator","_span","toString","data","split","map","x","parseInt","dayToId","day","parseDay","dayId","GridColumnLabel","numerator","gcd","_gcd","_numerator","y","Math","abs","t","l1","l2","absoluteValue","compare","GridRowLabel","time","_time","hour","min","Time","_min","_hour","floor","trunc","round","timeString","h","m","isBefore","t2","isAfter","add","ceil","subtract","t1","end","step","OneHour","TimeSpan","_end","isIntersect","other","range","Template","TimetableItem","HTMLElement","super","attachShadow","mode","_columnData","_panel","shadowRoot","querySelector","_title","keys","forEach","dataset","attributeChangedCallback","name","oldVal","newVal","updateGridRow","column","innerText","updateGridColumn","gridColumnStart","label","gridColumnEnd","gridRowStart","timeStart","gridRowEnd","timeEnd","update","n","parse","title","customElements","elementName","GridTemplateRowBuilder","_data","_calculated","_build","values","_minTime","fromAbsoluteValue","_maxTime","max","push","sort","css","index","length","current","next","equals","_css","join","buildIfNot","addTime","minTime","maxTime","build","GridTemplateColumnsBuilder","addColumn","labels","i","k","sortedLabels","TimetableRow","_label","getElementById","_line","startLabel","endLabel","gridRow","hide","hidden","show","IntersectCalculator","arr","_arr","calc","graph","Array","item","array","int","Timetable","_grid","_timeline","_rows","Map","_changeObserver","MutationObserver","bind","observe","childList","attributes","attributeFilter","subtree","updateTemplateColumns","updateTemplateRows","builder","days","items","filter","b","set","Set","otherItem","config","size","columnData","concat","gridTemplateColumns","from","to","gridTemplateRows","updateRows","timeLabel","has","newRow","querySelectorAll"],"mappings":"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","file":"mszgs.timetable.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"timetable\"] = factory();\n\telse\n\t\troot[\"timetable\"] = factory();\n})(((a) => {if(a.mszgs === undefined) a.mszgs = {}; return a.mszgs})(this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Template {\r\n  private _template: HTMLTemplateElement;\r\n  private _templateHtmlString: string;\r\n\r\n  constructor(templateHtmlString: string) {\r\n    this._templateHtmlString = templateHtmlString;\r\n    this._template = document.createElement(\"template\");\r\n    this._template.innerHTML = templateHtmlString;\r\n  }\r\n\r\n  public addStyle(styleString: string): void {\r\n    const style = document.createElement(\"style\");\r\n    style.innerHTML = styleString;\r\n    this.template.appendChild(style);\r\n  }\r\n\r\n  public get templateHtmlString(): string {\r\n    return this._templateHtmlString;\r\n  }\r\n\r\n  public get template(): HTMLTemplateElement {\r\n    return this._template;\r\n  }\r\n\r\n  public clone(deep = true): Node {\r\n    return this._template.content.cloneNode(deep);\r\n  }\r\n}\r\n\r\nexport default Template;\r\n","export class ColumnData {\r\n  private _row: number;\r\n  private _start: number;\r\n  private _span: number;\r\n  private _denominator: number;\r\n\r\n  constructor(row: number, start = 0, denominator = 1, span = 1) {\r\n    this._row = row;\r\n    this._start = start;\r\n    this._denominator = denominator;\r\n    this._span = span;\r\n  }\r\n\r\n  public get row(): number {\r\n    return this._row;\r\n  }\r\n\r\n  public get start(): number {\r\n    return this._start;\r\n  }\r\n\r\n  public get span(): number {\r\n    return this._span;\r\n  }\r\n\r\n  public get denominator(): number {\r\n    return this._span;\r\n  }\r\n\r\n  public toString(): string {\r\n    return `${this._row}/${this._start}/${this._denominator}/${this._span}`;\r\n  }\r\n\r\n  public static parse(data: string): ColumnData {\r\n    const [row, start, denominator, span] = data.split(\"/\").map(x => parseInt(x));\r\n    return new ColumnData(row, start, denominator, span);\r\n  }\r\n}\r\n","export type Day = \"MON\" | \"TUE\" | \"WED\" | \"THU\" | \"FRI\" | \"SAT\" | \"SUN\";\r\n\r\nexport function dayToId(day: Day): number {\r\n  switch (day) {\r\n    case \"MON\":\r\n      return 1;\r\n    case \"TUE\":\r\n      return 2;\r\n    case \"WED\":\r\n      return 3;\r\n    case \"THU\":\r\n      return 4;\r\n    case \"FRI\":\r\n      return 5;\r\n    case \"SAT\":\r\n      return 6;\r\n    case \"SUN\":\r\n      return 7;\r\n    default:\r\n      return -1;\r\n  }\r\n}\r\n\r\nexport function parseDay(dayId: number): Day {\r\n  switch (dayId) {\r\n    case 1:\r\n      return \"MON\";\r\n    case 2:\r\n      return \"TUE\";\r\n    case 3:\r\n      return \"WED\";\r\n    case 4:\r\n      return \"THU\";\r\n    case 5:\r\n      return \"FRI\";\r\n    case 6:\r\n      return \"SAT\";\r\n    case 7:\r\n      return \"SUN\";\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n","export class GridColumnLabel {\r\n  private _numerator;\r\n  private _denominator;\r\n  private _row;\r\n\r\n  constructor(row: number, numerator = 0, denominator = 1) {\r\n    const gcd = this._gcd(numerator, denominator);\r\n    this._numerator = numerator / gcd;\r\n    this._denominator = denominator / gcd;\r\n\r\n    this._row = row;\r\n  }\r\n\r\n  private _gcd(x: number, y: number): number {\r\n    x = Math.abs(x);\r\n    y = Math.abs(y);\r\n\r\n    while (y > 0) {\r\n      const t = y;\r\n      y = x % y;\r\n      x = t;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n  public get label(): string {\r\n    if (this._numerator === 0) {\r\n      return `c${this._row}`;\r\n    } else if (this._numerator === this._denominator) {\r\n      return `c${this._row + 1}`;\r\n    } else {\r\n      return `c${this._row}-${this._numerator}I${this._denominator}`;\r\n    }\r\n  }\r\n\r\n  public get value(): number {\r\n    return this._numerator / this._denominator;\r\n  }\r\n\r\n  public get absoluteValue(): number {\r\n    return this._row + this.value;\r\n  }\r\n\r\n  public static compare(l1: GridColumnLabel, l2: GridColumnLabel): number {\r\n    return l1.absoluteValue - l2.absoluteValue;\r\n  }\r\n\r\n  public static equals(l1: GridColumnLabel, l2: GridColumnLabel): boolean {\r\n    return GridColumnLabel.compare(l1, l2) === 0;\r\n  }\r\n}\r\n","import { Time } from \"./time\";\r\n\r\nexport class GridRowLabel {\r\n  private _time: Time;\r\n\r\n  constructor(time: Time) {\r\n    this._time = time;\r\n  }\r\n\r\n  public get label(): string {\r\n    return `r${this._time.hour}-${this._time.min}`;\r\n  }\r\n}\r\n","export class Time {\r\n  public static OneHour = new Time(1, 0);\r\n  public static OneMinute = new Time(0, 1);\r\n\r\n  private _hour: number;\r\n  private _min: number;\r\n\r\n  constructor(hour: number, min: number) {\r\n    this._min = min % 60;\r\n    this._hour = hour + Math.floor(min / 60);\r\n  }\r\n\r\n  public get hour(): number {\r\n    return this._hour;\r\n  }\r\n\r\n  public get min(): number {\r\n    return this._min;\r\n  }\r\n\r\n  public get absoluteValue(): number {\r\n    return this.hour + this.min / 60;\r\n  }\r\n\r\n  public toString(): string {\r\n    return `${this.hour > 9 ? \"\" : \"0\"}${this.hour}:${this.min > 9 ? \"\" : \"0\"}${this.min}`;\r\n  }\r\n\r\n  public static fromAbsoluteValue(value: number): Time {\r\n    const hour = Math.trunc(value);\r\n    const min = Math.round((value - hour) * 60);\r\n    return new Time(hour, min);\r\n  }\r\n\r\n  public static parse(timeString: string): Time {\r\n    if (timeString === undefined) {\r\n      return new Time(0, 0);\r\n    }\r\n\r\n    const [h, m] = timeString.split(\":\").map(x => parseInt(x));\r\n    return new Time(h, m);\r\n  }\r\n\r\n  public isBefore(t2: Time): boolean {\r\n    return Time.compare(this, t2) < 1;\r\n  }\r\n\r\n  public isAfter(t2: Time): boolean {\r\n    return Time.compare(this, t2) > 1;\r\n  }\r\n\r\n  public add(t2: Time): Time {\r\n    return new Time(this._hour + t2._hour, this._min + t2._min);\r\n  }\r\n\r\n  public floor(): Time {\r\n    return new Time(this._hour, 0);\r\n  }\r\n\r\n  public ceil(): Time {\r\n    return new Time(this._min > 0 ? this._hour + 1 : this._hour, 0);\r\n  }\r\n\r\n  public subtract(t2: Time): Time {\r\n    const min = this._min - t2._min;\r\n    const hour = this._hour - t2._hour;\r\n    if (min < 0) {\r\n      return new Time(hour - 1, min + 60);\r\n    }\r\n    return new Time(hour, min);\r\n  }\r\n\r\n  public static compare(t1: Time, t2: Time): number {\r\n    const a = t1._hour - t2._hour;\r\n    return a !== 0 ? a : t1._min - t2._min;\r\n  }\r\n\r\n  public static equals(t1: Time, t2: Time): boolean {\r\n    return Time.compare(t1, t2) === 0;\r\n  }\r\n\r\n  public static *range(start: Time, end: Time, step = Time.OneHour): Iterable<Time> {\r\n    let x = start;\r\n    while (Time.compare(x, end) < 1) {\r\n      yield x;\r\n      x = x.add(step);\r\n    }\r\n  }\r\n}\r\n\r\nexport class TimeSpan {\r\n  private _start: Time;\r\n  private _end: Time;\r\n\r\n  constructor(start: Time, end: Time) {\r\n    this._start = start;\r\n    this._end = end;\r\n  }\r\n\r\n  public isIntersect(other: TimeSpan): boolean {\r\n    return this._start.isBefore(other._end) && this._end.isAfter(other._start);\r\n  }\r\n\r\n  public range(step = Time.OneHour): Iterable<Time> {\r\n    return Time.range(this._start, this._end, step);\r\n  }\r\n}\r\n","import { ColumnData } from \"./utils/column-data\";\r\nimport { Day, dayToId } from \"./utils/day\";\r\nimport { GridColumnLabel } from \"./utils/grid-column-label\";\r\nimport { GridRowLabel } from \"./utils/grid-row-label\";\r\nimport Template from \"./utils/template\";\r\nimport { Time, TimeSpan } from \"./utils/time\";\r\n\r\nimport templateHtml from \"./templates/timetable-item.html\";\r\nconst template = new Template(templateHtml);\r\n\r\nexport interface TimetableElementData {\r\n  [data: string]: string;\r\n  timeStart?: string;\r\n  timeEnd?: string;\r\n  day?: string;\r\n  title?: string;\r\n}\r\n\r\nexport class TimetableItem extends HTMLElement {\r\n  public static elementName = \"mszgs-timetable-item\";\r\n\r\n  static get observedAttributes(): string[] {\r\n    return [\"data-time-start\", \"data-time-end\", \"data-day\", \"data-title\"];\r\n  }\r\n\r\n  protected _panel: HTMLElement;\r\n  protected _columnData: ColumnData;\r\n  private _title: HTMLSpanElement;\r\n\r\n  constructor(data: TimetableElementData = {}) {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" }).appendChild(template.clone());\r\n    this._columnData = new ColumnData(0);\r\n\r\n    this._panel = this.shadowRoot.querySelector<HTMLDivElement>(\".panel\");\r\n    this._title = this.shadowRoot.querySelector<HTMLSpanElement>(\"span#title\");\r\n\r\n    Object.keys(data).forEach(x => (this.dataset[x] = data[x]));\r\n  }\r\n\r\n  protected attributeChangedCallback(name: string, oldVal: string | null, newVal: string | null): void {\r\n    if (newVal === null && oldVal === newVal) {\r\n      return;\r\n    }\r\n\r\n    if (name === \"data-time-start\" || name === \"data-time-end\") {\r\n      this.updateGridRow();\r\n    } else if (name === \"data-day\") {\r\n      this.column = new ColumnData(parseInt(newVal));\r\n    } else if (name === \"data-title\") {\r\n      this._title.innerText = newVal;\r\n    }\r\n  }\r\n\r\n  protected updateGridColumn(): void {\r\n    this._panel.style.gridColumnStart = new GridColumnLabel(\r\n      dayToId(this.day),\r\n      this.column.start,\r\n      this.column.denominator\r\n    ).label;\r\n    this._panel.style.gridColumnEnd = new GridColumnLabel(\r\n      dayToId(this.day),\r\n      this.column.start + this.column.span,\r\n      this.column.denominator\r\n    ).label;\r\n  }\r\n\r\n  protected updateGridRow(): void {\r\n    this._panel.style.gridRowStart = new GridRowLabel(this.timeStart).label;\r\n    this._panel.style.gridRowEnd = new GridRowLabel(this.timeEnd).label;\r\n  }\r\n\r\n  public update(): void {\r\n    this.updateGridColumn();\r\n    this.updateGridRow();\r\n  }\r\n\r\n  public get column(): ColumnData {\r\n    return this._columnData;\r\n  }\r\n\r\n  public set column(n: ColumnData) {\r\n    this._columnData = n;\r\n    this.updateGridColumn();\r\n  }\r\n\r\n  public get timeStart(): Time {\r\n    return Time.parse(this.dataset[\"timeStart\"]);\r\n  }\r\n\r\n  public set timeStart(time: Time) {\r\n    this.dataset[\"timeStart\"] = time.toString();\r\n  }\r\n\r\n  public get timeEnd(): Time {\r\n    return Time.parse(this.dataset[\"timeEnd\"]);\r\n  }\r\n\r\n  public set timeEnd(time: Time) {\r\n    this.dataset[\"timeEnd\"] = time.toString();\r\n  }\r\n\r\n  public get time(): TimeSpan {\r\n    return new TimeSpan(this.timeStart, this.timeEnd);\r\n  }\r\n\r\n  public get day(): Day {\r\n    return this.dataset[\"day\"] as Day;\r\n  }\r\n\r\n  public set day(day: Day) {\r\n    this.dataset[\"day\"] = day;\r\n  }\r\n\r\n  public get title(): string {\r\n    return this.dataset[\"title\"];\r\n  }\r\n\r\n  public set title(title: string) {\r\n    this.dataset[\"title\"] = title;\r\n  }\r\n}\r\n\r\ncustomElements.define(TimetableItem.elementName, TimetableItem);\r\n","import { GridColumnLabel } from \"./grid-column-label\";\r\nimport { GridRowLabel } from \"./grid-row-label\";\r\nimport { Time } from \"./time\";\r\n\r\nexport interface GridTemplateBuilder {\r\n  build(): string;\r\n}\r\n\r\nexport class GridTemplateRowBuilder implements GridTemplateBuilder {\r\n  private _data: Time[];\r\n  private _css: string;\r\n  private _minTime: Time;\r\n  private _maxTime: Time;\r\n  private _calculated: boolean;\r\n\r\n  constructor(data: Time[] = []) {\r\n    this._data = data;\r\n    this._calculated = false;\r\n  }\r\n\r\n  private _build(): void {\r\n    const values = this._data.map(x => x.absoluteValue);\r\n    this._minTime = Time.fromAbsoluteValue(Math.min(...values)).floor();\r\n    this._maxTime = Time.fromAbsoluteValue(Math.max(...values)).ceil();\r\n\r\n    this._data.push(...Time.range(this._minTime, this._maxTime));\r\n\r\n    const data = this._data.sort(Time.compare);\r\n    const css = [\"[header] 50px\"];\r\n\r\n    for (let index = 0; index < data.length - 1; index++) {\r\n      const current = data[index];\r\n      const next = data[index + 1];\r\n\r\n      if (Time.equals(current, next)) {\r\n        continue;\r\n      }\r\n\r\n      const value = next.absoluteValue - current.absoluteValue;\r\n      const label = new GridRowLabel(current);\r\n\r\n      css.push(`[${label.label}] ${value}fr`);\r\n    }\r\n\r\n    css.push(\"[end]\");\r\n\r\n    this._css = css.join(\" \");\r\n    this._calculated = true;\r\n  }\r\n\r\n  private buildIfNot(): void {\r\n    if (!this._calculated) {\r\n      this._build();\r\n    }\r\n  }\r\n\r\n  public addTime(time: Time): void {\r\n    this._data.push(time);\r\n    this._calculated = false;\r\n  }\r\n\r\n  public minTime(): Time {\r\n    this.buildIfNot();\r\n    return this._minTime;\r\n  }\r\n\r\n  public maxTime(): Time {\r\n    this.buildIfNot();\r\n    return this._maxTime;\r\n  }\r\n\r\n  public build(): string {\r\n    this.buildIfNot();\r\n    return this._css;\r\n  }\r\n}\r\n\r\nexport class GridTemplateColumnsBuilder implements GridTemplateBuilder {\r\n  private _data: number[][];\r\n\r\n  constructor(data: number[][] = []) {\r\n    this._data = data;\r\n  }\r\n\r\n  public addColumn(data: number[] = [1]): void {\r\n    this._data.push(data);\r\n  }\r\n\r\n  public build(): string {\r\n    const data = this._data;\r\n    const css = [\"[start] 64px\"];\r\n\r\n    const labels: GridColumnLabel[] = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      data[i].forEach(x => {\r\n        for (let k = 0; k < x; k++) {\r\n          labels.push(new GridColumnLabel(i, k, x));\r\n        }\r\n      });\r\n    }\r\n\r\n    const sortedLabels = labels.sort(GridColumnLabel.compare);\r\n\r\n    for (let i = 0; i < sortedLabels.length - 1; i++) {\r\n      const current = sortedLabels[i];\r\n      const next = sortedLabels[i + 1];\r\n\r\n      if (GridColumnLabel.equals(current, next)) {\r\n        continue;\r\n      }\r\n\r\n      const value = next.absoluteValue - current.absoluteValue;\r\n      css.push(`[${current.label}] ${value}fr`);\r\n    }\r\n\r\n    css.push(`[${new GridColumnLabel(data.length - 1).label}] 0fr [end]`);\r\n\r\n    return css.join(\" \");\r\n  }\r\n}\r\n","import { Time } from \"./utils/time\";\r\nimport templateString from \"./templates/timetable-row.html\";\r\nimport Template from \"./utils/template\";\r\nimport { GridRowLabel } from \"./utils/grid-row-label\";\r\n\r\nexport class TimetableRow extends HTMLElement {\r\n  public static elementName = \"mszgs-timetable-row\";\r\n  public static template = new Template(templateString);\r\n\r\n  static get observedAttributes(): string[] {\r\n    return [\"data-time\"];\r\n  }\r\n\r\n  private _line: HTMLElement;\r\n  private _label: HTMLElement;\r\n\r\n  constructor(time: Time) {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" }).appendChild(TimetableRow.template.clone());\r\n\r\n    this._label = this.shadowRoot.getElementById(\"label\");\r\n    this._line = this.shadowRoot.getElementById(\"line\");\r\n\r\n    if (time !== undefined) {\r\n      this.time = time;\r\n    }\r\n  }\r\n\r\n  protected attributeChangedCallback(name: string, oldVal: string | null, newVal: string | null): void {\r\n    if (newVal === null) {\r\n      return;\r\n    }\r\n\r\n    if (name === \"data-time\") {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  protected update(): void {\r\n    const time = this.time;\r\n    const startLabel = new GridRowLabel(time).label;\r\n    const endLabel = new GridRowLabel(time.add(Time.OneHour)).label;\r\n\r\n    this._label.innerText = time.toString();\r\n    this._label.style.gridRowStart = startLabel;\r\n    this._label.style.gridRowEnd = endLabel;\r\n    this._line.style.gridRow = startLabel;\r\n  }\r\n\r\n  public hide(): void {\r\n    this._label.hidden = true;\r\n    this._line.hidden = true;\r\n  }\r\n\r\n  public show(): void {\r\n    this._label.hidden = false;\r\n    this._line.hidden = false;\r\n  }\r\n\r\n  public set time(time: Time) {\r\n    this.dataset[\"time\"] = time.toString();\r\n  }\r\n\r\n  public get time(): Time {\r\n    return Time.parse(this.dataset[\"time\"]);\r\n  }\r\n}\r\n\r\ncustomElements.define(TimetableRow.elementName, TimetableRow);\r\n","import templateHtml from \"./templates/timetable.html\";\r\nimport Template from \"./utils/template\";\r\nimport { TimetableItem, TimetableElementData } from \"./timetable-item\";\r\nimport { ColumnData } from \"./utils/column-data\";\r\nimport { Time } from \"./utils/time\";\r\nimport { GridTemplateColumnsBuilder, GridTemplateRowBuilder } from \"./utils/grid-template-builders\";\r\nimport { parseDay } from \"./utils/day\";\r\nimport { TimetableRow } from \"./timetable-row\";\r\n\r\nconst template = new Template(templateHtml);\r\n\r\nclass IntersectCalculator {\r\n  private _arr;\r\n\r\n  constructor(arr: TimetableItem[]) {\r\n    this._arr = arr;\r\n  }\r\n\r\n  private isIntersect(t1: TimetableItem, t2: TimetableItem): boolean {\r\n    return t1.time.isIntersect(t2.time);\r\n  }\r\n\r\n  public calc(): { count: number; targets: Timetable[] }[] {\r\n    const data = this._arr;\r\n\r\n    const graph: number[][] = new Array(data.length);\r\n\r\n    data.forEach((item, index, array) => {\r\n      const int: number[] = [];\r\n      array.forEach((other, i) => {\r\n        if (item !== other && this.isIntersect(item, other)) {\r\n          int.push(i);\r\n        }\r\n      });\r\n      graph[index] = int;\r\n    });\r\n\r\n    //  console.log(graph);\r\n    /*\r\n    const done = new Map<number, ColumnData>();\r\n    const result = new Array<ColumnData>(data.length);\r\n    const re = graph\r\n      .map((v, i) => {\r\n        return { index: i, value: v };\r\n      })\r\n      .sort((a, b) => a.value.length - b.value.length);\r\n    */\r\n    //   console.log(re);\r\n    return;\r\n  }\r\n}\r\n\r\nexport class Timetable extends HTMLElement {\r\n  public static elementName = \"mszgs-timetable\";\r\n\r\n  private _changeObserver;\r\n  private _grid: HTMLDivElement;\r\n  private _timeline: HTMLDivElement;\r\n  private _rows: Map<string, TimetableRow>;\r\n\r\n  static get observedAttributes(): string[] {\r\n    return [\"data-from\", \"data-to\"];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" }).appendChild(template.clone());\r\n\r\n    this._grid = this.shadowRoot.querySelector<HTMLDivElement>(\".grid\");\r\n    this._timeline = this.shadowRoot.querySelector(\"#timeline\");\r\n    this._rows = new Map();\r\n\r\n    this._changeObserver = new MutationObserver(this.update.bind(this));\r\n    this._changeObserver.observe(this, {\r\n      childList: true,\r\n      attributes: true,\r\n      attributeFilter: [\"data-time-start\", \"data-time-end\", \"data-day\"],\r\n      subtree: true,\r\n    });\r\n  }\r\n\r\n  public add(data: TimetableElementData): void {\r\n    this.appendChild(new TimetableItem(data));\r\n  }\r\n\r\n  private update() {\r\n    this.updateTemplateColumns();\r\n    this.updateTemplateRows();\r\n  }\r\n\r\n  private updateTemplateColumns() {\r\n    const builder = new GridTemplateColumnsBuilder();\r\n\r\n    for (let i = 0; i <= this.days; i++) {\r\n      const items = this.items\r\n        .filter(x => x.day === parseDay(i))\r\n        .sort((a, b) => {\r\n          return Time.compare(a.timeStart, b.timeStart);\r\n        });\r\n\r\n      if (items.length === 0) {\r\n        builder.addColumn([1]);\r\n        continue;\r\n      }\r\n\r\n      new IntersectCalculator(items).calc();\r\n\r\n      const map = new Map<TimetableItem, Set<TimetableItem>>();\r\n\r\n      for (const item of items) {\r\n        const set = new Set<TimetableItem>();\r\n\r\n        for (const otherItem of items) {\r\n          if (/* item !== otherItem && */ item.time.isIntersect(otherItem.time)) {\r\n            set.add(otherItem);\r\n          }\r\n        }\r\n\r\n        map.set(item, set);\r\n      }\r\n\r\n      const config = new Map<TimetableItem, ColumnData>();\r\n\r\n      for (const item of items) {\r\n        const intersects = map.get(item);\r\n        const span = intersects.size;\r\n\r\n        config.set(item, new ColumnData(1, 0, span));\r\n      }\r\n\r\n      const columnData = [...config.values()].map(x => x.denominator).concat([1]);\r\n\r\n      builder.addColumn(columnData);\r\n    }\r\n\r\n    this._grid.style.gridTemplateColumns = builder.build();\r\n  }\r\n\r\n  private updateTemplateRows() {\r\n    const builder = new GridTemplateRowBuilder();\r\n\r\n    const from = this.from;\r\n    const to = this.to;\r\n\r\n    if (from !== undefined) {\r\n      builder.addTime(this.from);\r\n    }\r\n\r\n    if (to !== undefined) {\r\n      builder.addTime(this.to);\r\n    }\r\n\r\n    this.items.forEach(x => {\r\n      builder.addTime(x.timeStart);\r\n      builder.addTime(x.timeEnd);\r\n    });\r\n\r\n    this._grid.style.gridTemplateRows = builder.build();\r\n\r\n    this.updateRows(builder.minTime(), builder.maxTime());\r\n  }\r\n\r\n  public updateRows(from: Time, to: Time): void {\r\n    //Hide all\r\n    this._rows.forEach(x => x.hide());\r\n\r\n    for (const time of Time.range(from.floor(), to.subtract(Time.OneHour))) {\r\n      const timeLabel = time.toString();\r\n      if (this._rows.has(timeLabel)) {\r\n        this._rows.get(timeLabel).show();\r\n      } else {\r\n        const newRow = new TimetableRow(time);\r\n        this._rows.set(timeLabel, newRow);\r\n        this._timeline.appendChild(newRow);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected attributeChangedCallback(name: string, oldVal: string | null, newVal: string | null): void {\r\n    if (newVal === null) {\r\n      return;\r\n    }\r\n\r\n    if (name === \"data-days\") {\r\n      this.updateTemplateColumns();\r\n    } else if (name === \"data-from\" || name === \"data-to\") {\r\n      this.updateTemplateRows();\r\n    }\r\n  }\r\n\r\n  public get from(): Time | undefined {\r\n    const from = this.dataset[\"from\"];\r\n    if (from !== undefined) {\r\n      return Time.parse(from);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public get to(): Time | undefined {\r\n    const to = this.dataset[\"to\"];\r\n    if (to !== undefined) {\r\n      return Time.parse(this.dataset[\"to\"]);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public get days(): number {\r\n    return 7;\r\n    // parseInt(this.dataset[\"days\"]);\r\n  }\r\n\r\n  public get items(): TimetableItem[] {\r\n    return Array.from(this.querySelectorAll<TimetableItem>(TimetableItem.elementName));\r\n  }\r\n}\r\n\r\ncustomElements.define(Timetable.elementName, Timetable);\r\n"],"sourceRoot":"src"}