{"version":3,"sources":["webpack://timetable/webpack/universalModuleDefinition","webpack://timetable/webpack/bootstrap","webpack://timetable/webpack/runtime/define property getters","webpack://timetable/webpack/runtime/hasOwnProperty shorthand","webpack://timetable/webpack/runtime/make namespace object","webpack://timetable/./build/utils/template.js","webpack://timetable/./build/utils/column-data.js","webpack://timetable/./build/utils/day.js","webpack://timetable/./build/utils/grid-column-label.js","webpack://timetable/./build/utils/grid-row-label.js","webpack://timetable/./build/utils/time.js","webpack://timetable/./build/timetable-item.js","webpack://timetable/./build/utils/grid-template-builders.js","webpack://timetable/./build/timetable-row.js","webpack://timetable/./build/timetable.js","webpack://timetable/./build/index.js"],"names":[],"mappings":"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","file":"mszgs.timetable.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"timetable\"] = factory();\n\telse\n\t\troot[\"timetable\"] = factory();\n})(((a) => {if(a.mszgs === undefined) a.mszgs = {}; return a.mszgs})(this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class Template {\n  constructor(templateHtmlString) {\n    _defineProperty(this, \"_template\", void 0);\n\n    _defineProperty(this, \"_templateHtmlString\", void 0);\n\n    this._templateHtmlString = templateHtmlString;\n    this._template = document.createElement(\"template\");\n    this._template.innerHTML = templateHtmlString;\n  }\n\n  addStyle(styleString) {\n    const style = document.createElement(\"style\");\n    style.innerHTML = styleString;\n    this.template.appendChild(style);\n  }\n\n  get templateHtmlString() {\n    return this._templateHtmlString;\n  }\n\n  get template() {\n    return this._template;\n  }\n\n  clone(deep = true) {\n    return this._template.content.cloneNode(deep);\n  }\n\n}\nexport default Template;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class ColumnData {\n  constructor(row, start = 0, denominator = 1, span = 1) {\n    _defineProperty(this, \"_row\", void 0);\n\n    _defineProperty(this, \"_start\", void 0);\n\n    _defineProperty(this, \"_span\", void 0);\n\n    _defineProperty(this, \"_denominator\", void 0);\n\n    this._row = row;\n    this._start = start;\n    this._denominator = denominator;\n    this._span = span;\n  }\n\n  get row() {\n    return this._row;\n  }\n\n  get start() {\n    return this._start;\n  }\n\n  get span() {\n    return this._span;\n  }\n\n  get denominator() {\n    return this._span;\n  }\n\n  toString() {\n    return `${this._row}/${this._start}/${this._denominator}/${this._span}`;\n  }\n\n  static parse(data) {\n    const [row, start, denominator, span] = data.split(\"/\").map(x => parseInt(x));\n    return new ColumnData(row, start, denominator, span);\n  }\n\n}","export function dayToId(day) {\n  switch (day) {\n    case \"MON\":\n      return 1;\n\n    case \"TUE\":\n      return 2;\n\n    case \"WED\":\n      return 3;\n\n    case \"THU\":\n      return 4;\n\n    case \"FRI\":\n      return 5;\n\n    case \"SAT\":\n      return 6;\n\n    case \"SUN\":\n      return 7;\n\n    default:\n      return -1;\n  }\n}\nexport function parseDay(dayId) {\n  switch (dayId) {\n    case 1:\n      return \"MON\";\n\n    case 2:\n      return \"TUE\";\n\n    case 3:\n      return \"WED\";\n\n    case 4:\n      return \"THU\";\n\n    case 5:\n      return \"FRI\";\n\n    case 6:\n      return \"SAT\";\n\n    case 7:\n      return \"SUN\";\n\n    default:\n      return undefined;\n  }\n}","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class GridColumnLabel {\n  constructor(row, numerator = 0, denominator = 1) {\n    _defineProperty(this, \"_numerator\", void 0);\n\n    _defineProperty(this, \"_denominator\", void 0);\n\n    _defineProperty(this, \"_row\", void 0);\n\n    const gcd = this._gcd(numerator, denominator);\n\n    this._numerator = numerator / gcd;\n    this._denominator = denominator / gcd;\n    this._row = row;\n  }\n\n  _gcd(x, y) {\n    x = Math.abs(x);\n    y = Math.abs(y);\n\n    while (y > 0) {\n      const t = y;\n      y = x % y;\n      x = t;\n    }\n\n    return x;\n  }\n\n  get label() {\n    if (this._numerator === 0) {\n      return `c${this._row}`;\n    } else if (this._numerator === this._denominator) {\n      return `c${this._row + 1}`;\n    } else {\n      return `c${this._row}-${this._numerator}I${this._denominator}`;\n    }\n  }\n\n  get value() {\n    return this._numerator / this._denominator;\n  }\n\n  get absoluteValue() {\n    return this._row + this.value;\n  }\n\n  static compare(l1, l2) {\n    return l1.absoluteValue - l2.absoluteValue;\n  }\n\n  static equals(l1, l2) {\n    return GridColumnLabel.compare(l1, l2) === 0;\n  }\n\n}","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class GridRowLabel {\n  constructor(time) {\n    _defineProperty(this, \"_time\", void 0);\n\n    this._time = time;\n  }\n\n  get label() {\n    return `r${this._time.hour}-${this._time.min}`;\n  }\n\n}","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class Time {\n  constructor(hour, min) {\n    _defineProperty(this, \"_hour\", void 0);\n\n    _defineProperty(this, \"_min\", void 0);\n\n    this._min = min % 60;\n    this._hour = hour + Math.floor(min / 60);\n  }\n\n  get hour() {\n    return this._hour;\n  }\n\n  get min() {\n    return this._min;\n  }\n\n  get absoluteValue() {\n    return this.hour + this.min / 60;\n  }\n\n  toString() {\n    return `${this.hour > 9 ? \"\" : \"0\"}${this.hour}:${this.min > 9 ? \"\" : \"0\"}${this.min}`;\n  }\n\n  static fromAbsoluteValue(value) {\n    const hour = Math.trunc(value);\n    const min = Math.round((value - hour) * 60);\n    return new Time(hour, min);\n  }\n\n  static parse(timeString) {\n    if (timeString === undefined) {\n      return new Time(0, 0);\n    }\n\n    const [h, m] = timeString.split(\":\").map(x => parseInt(x));\n    return new Time(h, m);\n  }\n\n  isBefore(t2) {\n    return Time.compare(this, t2) < 1;\n  }\n\n  isAfter(t2) {\n    return Time.compare(this, t2) > 1;\n  }\n\n  add(t2) {\n    return new Time(this._hour + t2._hour, this._min + t2._min);\n  }\n\n  floor() {\n    return new Time(this._hour, 0);\n  }\n\n  ceil() {\n    return new Time(this._min > 0 ? this._hour + 1 : this._hour, 0);\n  }\n\n  subtract(t2) {\n    const min = this._min - t2._min;\n    const hour = this._hour - t2._hour;\n\n    if (min < 0) {\n      return new Time(hour - 1, min + 60);\n    }\n\n    return new Time(hour, min);\n  }\n\n  static compare(t1, t2) {\n    const a = t1._hour - t2._hour;\n    return a !== 0 ? a : t1._min - t2._min;\n  }\n\n  static equals(t1, t2) {\n    return Time.compare(t1, t2) === 0;\n  }\n\n  static *range(start, end, step = Time.OneHour) {\n    let x = start;\n\n    while (Time.compare(x, end) < 1) {\n      yield x;\n      x = x.add(step);\n    }\n  }\n\n}\n\n_defineProperty(Time, \"OneHour\", new Time(1, 0));\n\n_defineProperty(Time, \"OneMinute\", new Time(0, 1));\n\nexport class TimeSpan {\n  constructor(start, end) {\n    _defineProperty(this, \"_start\", void 0);\n\n    _defineProperty(this, \"_end\", void 0);\n\n    this._start = start;\n    this._end = end;\n  }\n\n  isIntersect(other) {\n    return this._start.isBefore(other._end) && this._end.isAfter(other._start);\n  }\n\n  range(step = Time.OneHour) {\n    return Time.range(this._start, this._end, step);\n  }\n\n}","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ColumnData } from \"./utils/column-data\";\nimport { dayToId } from \"./utils/day\";\nimport { GridColumnLabel } from \"./utils/grid-column-label\";\nimport { GridRowLabel } from \"./utils/grid-row-label\";\nimport Template from \"./utils/template\";\nimport { Time, TimeSpan } from \"./utils/time\";\nvar templateHtml = \"<style>\\r\\n  :host {\\r\\n    display: contents;\\r\\n  }\\r\\n\\r\\n  .panel {\\r\\n    font-size: 14px;\\r\\n    overflow: hidden;\\r\\n    text-align: left;\\r\\n    height: 100%;\\r\\n\\r\\n    background-color: #222 ;\\r\\n    border: 2px solid #337ab7;\\r\\n    border-radius: 4px;\\r\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .05);\\r\\n    box-sizing: border-box;\\r\\n    color: #EEE;\\r\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\r\\n    line-height: 1.42857143;\\r\\n    scrollbar-color: #333 #666;\\r\\n  }\\r\\n\\r\\n  .panel-heading {\\r\\n    background-color: #337ab7;\\r\\n    border-bottom: 1px solid #337ab7;\\r\\n    border-top-left-radius: 3px;\\r\\n    border-top-right-radius: 3px;\\r\\n  }\\r\\n\\r\\n  .panel-body {\\r\\n    padding: 7.5px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    <span id=\\\"title\\\"> </span>\\r\\n  </div>\\r\\n  <div class=\\\"panel-body\\\">\\r\\n      <slot></slot>\\r\\n    </span>\\r\\n  </div>\\r\\n</div>\\r\\n\";\nconst template = new Template(templateHtml);\nexport class TimetableItem extends HTMLElement {\n  static get observedAttributes() {\n    return [\"data-time-start\", \"data-time-end\", \"data-day\", \"data-title\"];\n  }\n\n  constructor(data = {}) {\n    super();\n\n    _defineProperty(this, \"_panel\", void 0);\n\n    _defineProperty(this, \"_columnData\", void 0);\n\n    _defineProperty(this, \"_title\", void 0);\n\n    this.attachShadow({\n      mode: \"open\"\n    }).appendChild(template.clone());\n    this._columnData = new ColumnData(0);\n    this._panel = this.shadowRoot.querySelector(\".panel\");\n    this._title = this.shadowRoot.querySelector(\"span#title\");\n    Object.keys(data).forEach(x => this.dataset[x] = data[x]);\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    if (newVal === null && oldVal === newVal) {\n      return;\n    }\n\n    if (name === \"data-time-start\" || name === \"data-time-end\") {\n      this.updateGridRow();\n    } else if (name === \"data-day\") {\n      this.column = new ColumnData(parseInt(newVal));\n    } else if (name === \"data-title\") {\n      this._title.innerText = newVal;\n    }\n  }\n\n  updateGridColumn() {\n    this._panel.style.gridColumnStart = new GridColumnLabel(dayToId(this.day), this.column.start, this.column.denominator).label;\n    this._panel.style.gridColumnEnd = new GridColumnLabel(dayToId(this.day), this.column.start + this.column.span, this.column.denominator).label;\n  }\n\n  updateGridRow() {\n    this._panel.style.gridRowStart = new GridRowLabel(this.timeStart).label;\n    this._panel.style.gridRowEnd = new GridRowLabel(this.timeEnd).label;\n  }\n\n  update() {\n    this.updateGridColumn();\n    this.updateGridRow();\n  }\n\n  get column() {\n    return this._columnData;\n  }\n\n  set column(n) {\n    this._columnData = n;\n    this.updateGridColumn();\n  }\n\n  get timeStart() {\n    return Time.parse(this.dataset[\"timeStart\"]);\n  }\n\n  set timeStart(time) {\n    this.dataset[\"timeStart\"] = time.toString();\n  }\n\n  get timeEnd() {\n    return Time.parse(this.dataset[\"timeEnd\"]);\n  }\n\n  set timeEnd(time) {\n    this.dataset[\"timeEnd\"] = time.toString();\n  }\n\n  get time() {\n    return new TimeSpan(this.timeStart, this.timeEnd);\n  }\n\n  get day() {\n    return this.dataset[\"day\"];\n  }\n\n  set day(day) {\n    this.dataset[\"day\"] = day;\n  }\n\n  get title() {\n    return this.dataset[\"title\"];\n  }\n\n  set title(title) {\n    this.dataset[\"title\"] = title;\n  }\n\n}\n\n_defineProperty(TimetableItem, \"elementName\", \"mszgs-timetable-item\");\n\ncustomElements.define(TimetableItem.elementName, TimetableItem);","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GridColumnLabel } from \"./grid-column-label\";\nimport { GridRowLabel } from \"./grid-row-label\";\nimport { Time } from \"./time\";\nexport class GridTemplateRowBuilder {\n  constructor(data = []) {\n    _defineProperty(this, \"_data\", void 0);\n\n    _defineProperty(this, \"_css\", void 0);\n\n    _defineProperty(this, \"_minTime\", void 0);\n\n    _defineProperty(this, \"_maxTime\", void 0);\n\n    _defineProperty(this, \"_calculated\", void 0);\n\n    this._data = data;\n    this._calculated = false;\n  }\n\n  _build() {\n    const values = this._data.map(x => x.absoluteValue);\n\n    this._minTime = Time.fromAbsoluteValue(Math.min(...values)).floor();\n    this._maxTime = Time.fromAbsoluteValue(Math.max(...values)).ceil();\n\n    this._data.push(...Time.range(this._minTime, this._maxTime));\n\n    const data = this._data.sort(Time.compare);\n\n    const css = [\"[header] 50px\"];\n\n    for (let index = 0; index < data.length - 1; index++) {\n      const current = data[index];\n      const next = data[index + 1];\n\n      if (Time.equals(current, next)) {\n        continue;\n      }\n\n      const value = next.absoluteValue - current.absoluteValue;\n      const label = new GridRowLabel(current);\n      css.push(`[${label.label}] ${value}fr`);\n    }\n\n    css.push(\"[end]\");\n    this._css = css.join(\" \");\n    this._calculated = true;\n  }\n\n  buildIfNot() {\n    if (!this._calculated) {\n      this._build();\n    }\n  }\n\n  addTime(time) {\n    this._data.push(time);\n\n    this._calculated = false;\n  }\n\n  minTime() {\n    this.buildIfNot();\n    return this._minTime;\n  }\n\n  maxTime() {\n    this.buildIfNot();\n    return this._maxTime;\n  }\n\n  build() {\n    this.buildIfNot();\n    return this._css;\n  }\n\n}\nexport class GridTemplateColumnsBuilder {\n  constructor(data = []) {\n    _defineProperty(this, \"_data\", void 0);\n\n    this._data = data;\n  }\n\n  addColumn(data = [1]) {\n    this._data.push(data);\n  }\n\n  build() {\n    const data = this._data;\n    const css = [\"[start] 64px\"];\n    const labels = [];\n\n    for (let i = 0; i < data.length; i++) {\n      data[i].forEach(x => {\n        for (let k = 0; k < x; k++) {\n          labels.push(new GridColumnLabel(i, k, x));\n        }\n      });\n    }\n\n    const sortedLabels = labels.sort(GridColumnLabel.compare);\n\n    for (let i = 0; i < sortedLabels.length - 1; i++) {\n      const current = sortedLabels[i];\n      const next = sortedLabels[i + 1];\n\n      if (GridColumnLabel.equals(current, next)) {\n        continue;\n      }\n\n      const value = next.absoluteValue - current.absoluteValue;\n      css.push(`[${current.label}] ${value}fr`);\n    }\n\n    css.push(`[${new GridColumnLabel(data.length - 1).label}] 0fr [end]`);\n    return css.join(\" \");\n  }\n\n}","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Time } from \"./utils/time\";\nvar templateString = \"<style>\\r\\n    :host{\\r\\n        display: contents;\\r\\n    }\\r\\n\\r\\n    #line {\\r\\n    border-top: 1px #fff solid;\\r\\n    grid-column: start / end;\\r\\n    z-index: -1;\\r\\n    }\\r\\n    #label{\\r\\n        grid-column: 1\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<div id=\\\"line\\\"></div>\\r\\n<div id=\\\"label\\\"></div>\";\nimport Template from \"./utils/template\";\nimport { GridRowLabel } from \"./utils/grid-row-label\";\nexport class TimetableRow extends HTMLElement {\n  static get observedAttributes() {\n    return [\"data-time\"];\n  }\n\n  constructor(time) {\n    super();\n\n    _defineProperty(this, \"_line\", void 0);\n\n    _defineProperty(this, \"_label\", void 0);\n\n    this.attachShadow({\n      mode: \"open\"\n    }).appendChild(TimetableRow.template.clone());\n    this._label = this.shadowRoot.getElementById(\"label\");\n    this._line = this.shadowRoot.getElementById(\"line\");\n\n    if (time !== undefined) {\n      this.time = time;\n    }\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    if (newVal === null) {\n      return;\n    }\n\n    if (name === \"data-time\") {\n      this.update();\n    }\n  }\n\n  update() {\n    const time = this.time;\n    const startLabel = new GridRowLabel(time).label;\n    const endLabel = new GridRowLabel(time.add(Time.OneHour)).label;\n    this._label.innerText = time.toString();\n    this._label.style.gridRowStart = startLabel;\n    this._label.style.gridRowEnd = endLabel;\n    this._line.style.gridRow = startLabel;\n  }\n\n  hide() {\n    this._label.hidden = true;\n    this._line.hidden = true;\n  }\n\n  show() {\n    this._label.hidden = false;\n    this._line.hidden = false;\n  }\n\n  set time(time) {\n    this.dataset[\"time\"] = time.toString();\n  }\n\n  get time() {\n    return Time.parse(this.dataset[\"time\"]);\n  }\n\n}\n\n_defineProperty(TimetableRow, \"elementName\", \"mszgs-timetable-row\");\n\n_defineProperty(TimetableRow, \"template\", new Template(templateString));\n\ncustomElements.define(TimetableRow.elementName, TimetableRow);","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar templateHtml = \"<style>\\r\\n  /*\\r\\n  Props:\\r\\n  --mszgs-timetable-header-label-monday\\r\\n  --mszgs-timetable-header-label-tuesday\\r\\n  --mszgs-timetable-header-label-wednesday\\r\\n  --mszgs-timetable-header-label-thursday\\r\\n  --mszgs-timetable-header-label-friday\\r\\n  --mszgs-timetable-header-label-saturday\\r\\n  --mszgs-timetable-header-label-sunday\\r\\n\\r\\n  --mszgs-timetable-min-width\\r\\n  */\\r\\n  .monday {\\r\\n    grid-row: header;\\r\\n    grid-column: c0 / c1;\\r\\n  }\\r\\n\\r\\n  .monday::after {\\r\\n    content: var(--mszgs-timetable-header-label-monday, \\\"Monday\\\");\\r\\n  }\\r\\n\\r\\n  .tuesday {\\r\\n    grid-row: header;\\r\\n    grid-column: c1 / c2;\\r\\n  }\\r\\n\\r\\n  .tuesday::after {\\r\\n    content: var(--mszgs-timetable-header-label-tuesday, \\\"Tuesday\\\");\\r\\n  }\\r\\n\\r\\n  .wednesday {\\r\\n    grid-row: header;\\r\\n    grid-column: c2 / c3;\\r\\n  }\\r\\n\\r\\n  .wednesday::after {\\r\\n    content: var(--mszgs-timetable-header-label-wednesday, \\\"Wednesday\\\");\\r\\n  }\\r\\n\\r\\n  .thursday {\\r\\n    grid-row: header;\\r\\n    grid-column: c3 / c4;\\r\\n  }\\r\\n\\r\\n  .thursday::after {\\r\\n    content: var(--mszgs-timetable-header-label-thursday, \\\"Thursday\\\");\\r\\n  }\\r\\n\\r\\n  .friday {\\r\\n    grid-row: header;\\r\\n    grid-column: c4 / c5;\\r\\n  }\\r\\n\\r\\n  .friday::after {\\r\\n    content: var(--mszgs-timetable-header-label-friday, \\\"Friday\\\");\\r\\n  }\\r\\n\\r\\n  .saturday {\\r\\n    grid-row: header;\\r\\n    grid-column: c5 / c6;\\r\\n  }\\r\\n\\r\\n  .saturday::after {\\r\\n    content: var(--mszgs-timetable-header-label-saturday, \\\"Saturday\\\");\\r\\n  }\\r\\n\\r\\n  .sunday {\\r\\n    grid-row: header;\\r\\n    grid-column: c6 / c7;\\r\\n  }\\r\\n\\r\\n  .sunday::after {\\r\\n    content: var(--mszgs-timetable-header-label-sunday, \\\"Sunday\\\");\\r\\n  }\\r\\n\\r\\n  .grid {\\r\\n    display: grid;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: relative;\\r\\n    background-color: #222;\\r\\n    color: #eee;\\r\\n    min-width: var(--mszgs-timetable-min-width, 550px);\\r\\n    transition: all 1s;\\r\\n    z-index: 0;\\r\\n  }\\r\\n\\r\\n  div {\\r\\n    text-align: center;\\r\\n    position: relative;\\r\\n  }\\r\\n\\r\\n  .contents {\\r\\n    display: contents;\\r\\n  }\\r\\n\\r\\n  .overflow {\\r\\n    overflow-x: auto;\\r\\n  }\\r\\n\\r\\n  .grid-line {\\r\\n    border-top: 1px #fff solid;\\r\\n    grid-column: start / end;\\r\\n    z-index: -1;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"overflow\\\">\\r\\n  <div class=\\\"grid\\\">\\r\\n    <div id=\\\"header\\\" class=\\\"contents\\\">\\r\\n      <div id=\\\"monday\\\"    class=\\\"header monday\\\"></div>\\r\\n      <div id=\\\"tuesday\\\"   class=\\\"header tuesday\\\"></div>\\r\\n      <div id=\\\"wednesday\\\" class=\\\"header wednesday\\\"></div>\\r\\n      <div id=\\\"thursday\\\"  class=\\\"header thursday\\\"></div>\\r\\n      <div id=\\\"friday\\\"    class=\\\"header friday\\\"></div>\\r\\n      <div id=\\\"saturday\\\"  class=\\\"header saturday\\\"></div>\\r\\n      <div id=\\\"sunday\\\"    class=\\\"header sunday\\\"></div>\\r\\n    </div>\\r\\n    <div id=\\\"timeline\\\" class=\\\"contents\\\">\\r\\n    </div>\\r\\n    <div id=\\\"items\\\" class=\\\"contents\\\">\\r\\n      <slot></slot>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\nimport Template from \"./utils/template\";\nimport { TimetableItem } from \"./timetable-item\";\nimport { ColumnData } from \"./utils/column-data\";\nimport { Time } from \"./utils/time\";\nimport { GridTemplateColumnsBuilder, GridTemplateRowBuilder } from \"./utils/grid-template-builders\";\nimport { parseDay } from \"./utils/day\";\nimport { TimetableRow } from \"./timetable-row\";\nconst template = new Template(templateHtml);\n\nclass IntersectCalculator {\n  constructor(arr) {\n    _defineProperty(this, \"_arr\", void 0);\n\n    this._arr = arr;\n  }\n\n  isIntersect(t1, t2) {\n    return t1.time.isIntersect(t2.time);\n  }\n\n  calc() {\n    const data = this._arr;\n    const graph = new Array(data.length);\n    data.forEach((item, index, array) => {\n      const int = [];\n      array.forEach((other, i) => {\n        if (item !== other && this.isIntersect(item, other)) {\n          int.push(i);\n        }\n      });\n      graph[index] = int;\n    }); //  console.log(graph);\n\n    /*\r\n    const done = new Map<number, ColumnData>();\r\n    const result = new Array<ColumnData>(data.length);\r\n    const re = graph\r\n      .map((v, i) => {\r\n        return { index: i, value: v };\r\n      })\r\n      .sort((a, b) => a.value.length - b.value.length);\r\n    */\n    //   console.log(re);\n\n    return;\n  }\n\n}\n\nexport class Timetable extends HTMLElement {\n  static get observedAttributes() {\n    return [\"data-from\", \"data-to\"];\n  }\n\n  constructor() {\n    super();\n\n    _defineProperty(this, \"_changeObserver\", void 0);\n\n    _defineProperty(this, \"_grid\", void 0);\n\n    _defineProperty(this, \"_timeline\", void 0);\n\n    _defineProperty(this, \"_rows\", void 0);\n\n    this.attachShadow({\n      mode: \"open\"\n    }).appendChild(template.clone());\n    this._grid = this.shadowRoot.querySelector(\".grid\");\n    this._timeline = this.shadowRoot.querySelector(\"#timeline\");\n    this._rows = new Map();\n    this._changeObserver = new MutationObserver(this.update.bind(this));\n\n    this._changeObserver.observe(this, {\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-time-start\", \"data-time-end\", \"data-day\"],\n      subtree: true\n    });\n  }\n\n  add(data) {\n    this.appendChild(new TimetableItem(data));\n  }\n\n  update() {\n    this.updateTemplateColumns();\n    this.updateTemplateRows();\n  }\n\n  updateTemplateColumns() {\n    const builder = new GridTemplateColumnsBuilder();\n\n    for (let i = 0; i <= this.days; i++) {\n      const items = this.items.filter(x => x.day === parseDay(i)).sort((a, b) => {\n        return Time.compare(a.timeStart, b.timeStart);\n      });\n\n      if (items.length === 0) {\n        builder.addColumn([1]);\n        continue;\n      }\n\n      new IntersectCalculator(items).calc();\n      const map = new Map();\n\n      for (const item of items) {\n        const set = new Set();\n\n        for (const otherItem of items) {\n          if (\n          /* item !== otherItem && */\n          item.time.isIntersect(otherItem.time)) {\n            set.add(otherItem);\n          }\n        }\n\n        map.set(item, set);\n      }\n\n      const config = new Map();\n\n      for (const item of items) {\n        const intersects = map.get(item);\n        const span = intersects.size;\n        config.set(item, new ColumnData(1, 0, span));\n      }\n\n      const columnData = [...config.values()].map(x => x.denominator).concat([1]);\n      builder.addColumn(columnData);\n    }\n\n    this._grid.style.gridTemplateColumns = builder.build();\n  }\n\n  updateTemplateRows() {\n    const builder = new GridTemplateRowBuilder();\n    const from = this.from;\n    const to = this.to;\n\n    if (from !== undefined) {\n      builder.addTime(this.from);\n    }\n\n    if (to !== undefined) {\n      builder.addTime(this.to);\n    }\n\n    this.items.forEach(x => {\n      builder.addTime(x.timeStart);\n      builder.addTime(x.timeEnd);\n    });\n    this._grid.style.gridTemplateRows = builder.build();\n    this.updateRows(builder.minTime(), builder.maxTime());\n  }\n\n  updateRows(from, to) {\n    //Hide all\n    this._rows.forEach(x => x.hide());\n\n    for (const time of Time.range(from.floor(), to.subtract(Time.OneHour))) {\n      const timeLabel = time.toString();\n\n      if (this._rows.has(timeLabel)) {\n        this._rows.get(timeLabel).show();\n      } else {\n        const newRow = new TimetableRow(time);\n\n        this._rows.set(timeLabel, newRow);\n\n        this._timeline.appendChild(newRow);\n      }\n    }\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    if (newVal === null) {\n      return;\n    }\n\n    if (name === \"data-days\") {\n      this.updateTemplateColumns();\n    } else if (name === \"data-from\" || name === \"data-to\") {\n      this.updateTemplateRows();\n    }\n  }\n\n  get from() {\n    const from = this.dataset[\"from\"];\n\n    if (from !== undefined) {\n      return Time.parse(from);\n    }\n\n    return undefined;\n  }\n\n  get to() {\n    const to = this.dataset[\"to\"];\n\n    if (to !== undefined) {\n      return Time.parse(this.dataset[\"to\"]);\n    }\n\n    return undefined;\n  }\n\n  get days() {\n    return 7; // parseInt(this.dataset[\"days\"]);\n  }\n\n  get items() {\n    return Array.from(this.querySelectorAll(TimetableItem.elementName));\n  }\n\n}\n\n_defineProperty(Timetable, \"elementName\", \"mszgs-timetable\");\n\ncustomElements.define(Timetable.elementName, Timetable);","export * from \"./timetable\";\nexport * from \"./timetable-item\";\nexport * from \"./timetable-row\";"],"sourceRoot":""}