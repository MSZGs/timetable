!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.timetable=e():t.timetable=e()}((t=>(void 0===t.mszgs&&(t.mszgs={}),t.mszgs))(this),(function(){return(()=>{"use strict";var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};function r(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}t.r(e),t.d(e,{Timetable:()=>E,TimetableItem:()=>_,TimetableRow:()=>v});const n=class{constructor(t){r(this,"_template",void 0),r(this,"_templateHtmlString",void 0),this._templateHtmlString=t,this._template=document.createElement("template"),this._template.innerHTML=t}addStyle(t){const e=document.createElement("style");e.innerHTML=t,this.template.appendChild(e)}get templateHtmlString(){return this._templateHtmlString}get template(){return this._template}clone(t=!0){return this._template.content.cloneNode(t)}};function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}class a{constructor(t,e=0,r=1,n=1){i(this,"_row",void 0),i(this,"_start",void 0),i(this,"_span",void 0),i(this,"_denominator",void 0),this._row=t,this._start=e,this._denominator=r,this._span=n}get row(){return this._row}get start(){return this._start}get span(){return this._span}get denominator(){return this._span}toString(){return`${this._row}/${this._start}/${this._denominator}/${this._span}`}static parse(t){const[e,r,n,i]=t.split("/").map((t=>parseInt(t)));return new a(e,r,n,i)}}function s(t){switch(t){case"MON":return 1;case"TUE":return 2;case"WED":return 3;case"THU":return 4;case"FRI":return 5;case"SAT":return 6;case"SUN":return 7;default:return-1}}function o(t){switch(t){case 1:return"MON";case 2:return"TUE";case 3:return"WED";case 4:return"THU";case 5:return"FRI";case 6:return"SAT";case 7:return"SUN";default:return}}function d(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}class l{constructor(t,e=0,r=1){d(this,"_numerator",void 0),d(this,"_denominator",void 0),d(this,"_row",void 0);const n=this._gcd(e,r);this._numerator=e/n,this._denominator=r/n,this._row=t}_gcd(t,e){for(t=Math.abs(t),e=Math.abs(e);e>0;){const r=e;e=t%e,t=r}return t}get label(){return 0===this._numerator?`c${this._row}`:this._numerator===this._denominator?`c${this._row+1}`:`c${this._row}-${this._numerator}I${this._denominator}`}get value(){return this._numerator/this._denominator}get absoluteValue(){return this._row+this.value}static compare(t,e){return t.absoluteValue-e.absoluteValue}static equals(t,e){return 0===l.compare(t,e)}}class h{constructor(t){var e,r,n;n=void 0,(r="_time")in(e=this)?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,this._time=t}get label(){return`r${this._time.hour}-${this._time.min}`}}function u(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}class m{constructor(t,e){u(this,"_hour",void 0),u(this,"_min",void 0),this._min=e%60,this._hour=t+Math.floor(e/60)}get hour(){return this._hour}get min(){return this._min}get absoluteValue(){return this.hour+this.min/60}toString(){return`${this.hour>9?"":"0"}${this.hour}:${this.min>9?"":"0"}${this.min}`}static fromAbsoluteValue(t){const e=Math.trunc(t),r=Math.round(60*(t-e));return new m(e,r)}static parse(t){if(void 0===t)return new m(0,0);const[e,r]=t.split(":").map((t=>parseInt(t)));return new m(e,r)}isBefore(t){return m.compare(this,t)<1}isAfter(t){return m.compare(this,t)>1}add(t){return new m(this._hour+t._hour,this._min+t._min)}floor(){return new m(this._hour,0)}ceil(){return new m(this._min>0?this._hour+1:this._hour,0)}subtract(t){const e=this._min-t._min,r=this._hour-t._hour;return e<0?new m(r-1,e+60):new m(r,e)}static compare(t,e){const r=t._hour-e._hour;return 0!==r?r:t._min-e._min}static equals(t,e){return 0===m.compare(t,e)}static*range(t,e,r=m.OneHour){let n=t;for(;m.compare(n,e)<1;)yield n,n=n.add(r)}}u(m,"OneHour",new m(1,0)),u(m,"OneMinute",new m(0,1));class c{constructor(t,e){u(this,"_start",void 0),u(this,"_end",void 0),this._start=t,this._end=e}isIntersect(t){return this._start.isBefore(t._end)&&this._end.isAfter(t._start)}range(t=m.OneHour){return m.range(this._start,this._end,t)}}function b(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}const p=new n('<style>\r\n  :host {\r\n    display: contents;\r\n  }\r\n\r\n  .panel {\r\n    font-size: 14px;\r\n    overflow: hidden;\r\n    text-align: left;\r\n    height: 100%;\r\n\r\n    background-color: #222 ;\r\n    border: 2px solid #337ab7;\r\n    border-radius: 4px;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .05);\r\n    box-sizing: border-box;\r\n    color: #EEE;\r\n    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n    line-height: 1.42857143;\r\n    scrollbar-color: #333 #666;\r\n  }\r\n\r\n  .panel-heading {\r\n    background-color: #337ab7;\r\n    border-bottom: 1px solid #337ab7;\r\n    border-top-left-radius: 3px;\r\n    border-top-right-radius: 3px;\r\n  }\r\n\r\n  .panel-body {\r\n    padding: 7.5px;\r\n  }\r\n</style>\r\n\r\n<div class="panel">\r\n  <div class="panel-heading">\r\n    <span id="title"> </span>\r\n  </div>\r\n  <div class="panel-body">\r\n      <slot></slot>\r\n    </span>\r\n  </div>\r\n</div>\r\n');class _ extends HTMLElement{static get observedAttributes(){return["data-time-start","data-time-end","data-day","data-title"]}constructor(t={}){super(),b(this,"_panel",void 0),b(this,"_columnData",void 0),b(this,"_title",void 0),this.attachShadow({mode:"open"}).appendChild(p.clone()),this._columnData=new a(0),this._panel=this.shadowRoot.querySelector(".panel"),this._title=this.shadowRoot.querySelector("span#title"),Object.keys(t).forEach((e=>this.dataset[e]=t[e]))}attributeChangedCallback(t,e,r){null===r&&e===r||("data-time-start"===t||"data-time-end"===t?this.updateGridRow():"data-day"===t?this.column=new a(parseInt(r)):"data-title"===t&&(this._title.innerText=r))}updateGridColumn(){this._panel.style.gridColumnStart=new l(s(this.day),this.column.start,this.column.denominator).label,this._panel.style.gridColumnEnd=new l(s(this.day),this.column.start+this.column.span,this.column.denominator).label}updateGridRow(){this._panel.style.gridRowStart=new h(this.timeStart).label,this._panel.style.gridRowEnd=new h(this.timeEnd).label}update(){this.updateGridColumn(),this.updateGridRow()}get column(){return this._columnData}set column(t){this._columnData=t,this.updateGridColumn()}get timeStart(){return m.parse(this.dataset.timeStart)}set timeStart(t){this.dataset.timeStart=t.toString()}get timeEnd(){return m.parse(this.dataset.timeEnd)}set timeEnd(t){this.dataset.timeEnd=t.toString()}get time(){return new c(this.timeStart,this.timeEnd)}get day(){return this.dataset.day}set day(t){this.dataset.day=t}get title(){return this.dataset.title}set title(t){this.dataset.title=t}}function g(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}b(_,"elementName","mszgs-timetable-item"),customElements.define(_.elementName,_);class f{constructor(t=[]){g(this,"_data",void 0),g(this,"_css",void 0),g(this,"_minTime",void 0),g(this,"_maxTime",void 0),g(this,"_calculated",void 0),this._data=t,this._calculated=!1}_build(){const t=this._data.map((t=>t.absoluteValue));this._minTime=m.fromAbsoluteValue(Math.min(...t)).floor(),this._maxTime=m.fromAbsoluteValue(Math.max(...t)).ceil(),this._data.push(...m.range(this._minTime,this._maxTime));const e=this._data.sort(m.compare),r=["[header] 50px"];for(let t=0;t<e.length-1;t++){const n=e[t],i=e[t+1];if(m.equals(n,i))continue;const a=i.absoluteValue-n.absoluteValue,s=new h(n);r.push(`[${s.label}] ${a}fr`)}r.push("[end]"),this._css=r.join(" "),this._calculated=!0}buildIfNot(){this._calculated||this._build()}addTime(t){this._data.push(t),this._calculated=!1}minTime(){return this.buildIfNot(),this._minTime}maxTime(){return this.buildIfNot(),this._maxTime}build(){return this.buildIfNot(),this._css}}class y{constructor(t=[]){g(this,"_data",void 0),this._data=t}addColumn(t=[1]){this._data.push(t)}build(){const t=this._data,e=["[start] 64px"],r=[];for(let e=0;e<t.length;e++)t[e].forEach((t=>{for(let n=0;n<t;n++)r.push(new l(e,n,t))}));const n=r.sort(l.compare);for(let t=0;t<n.length-1;t++){const r=n[t],i=n[t+1];if(l.equals(r,i))continue;const a=i.absoluteValue-r.absoluteValue;e.push(`[${r.label}] ${a}fr`)}return e.push(`[${new l(t.length-1).label}] 0fr [end]`),e.join(" ")}}function w(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}class v extends HTMLElement{static get observedAttributes(){return["data-time"]}constructor(t){super(),w(this,"_line",void 0),w(this,"_label",void 0),this.attachShadow({mode:"open"}).appendChild(v.template.clone()),this._label=this.shadowRoot.getElementById("label"),this._line=this.shadowRoot.getElementById("line"),void 0!==t&&(this.time=t)}attributeChangedCallback(t,e,r){null!==r&&"data-time"===t&&this.update()}update(){const t=this.time,e=new h(t).label,r=new h(t.add(m.OneHour)).label;this._label.innerText=t.toString(),this._label.style.gridRowStart=e,this._label.style.gridRowEnd=r,this._line.style.gridRow=e}hide(){this._label.hidden=!0,this._line.hidden=!0}show(){this._label.hidden=!1,this._line.hidden=!1}set time(t){this.dataset.time=t.toString()}get time(){return m.parse(this.dataset.time)}}function T(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}w(v,"elementName","mszgs-timetable-row"),w(v,"template",new n('<style>\r\n    :host{\r\n        display: contents;\r\n    }\r\n\r\n    #line {\r\n    border-top: 1px #fff solid;\r\n    grid-column: start / end;\r\n    z-index: -1;\r\n    }\r\n    #label{\r\n        grid-column: 1\r\n    }\r\n</style>\r\n\r\n<div id="line"></div>\r\n<div id="label"></div>')),customElements.define(v.elementName,v);const S=new n('<style>\r\n  /*\r\n  Props:\r\n  --mszgs-timetable-header-label-monday\r\n  --mszgs-timetable-header-label-tuesday\r\n  --mszgs-timetable-header-label-wednesday\r\n  --mszgs-timetable-header-label-thursday\r\n  --mszgs-timetable-header-label-friday\r\n  --mszgs-timetable-header-label-saturday\r\n  --mszgs-timetable-header-label-sunday\r\n\r\n  --mszgs-timetable-min-width\r\n  */\r\n  .monday {\r\n    grid-row: header;\r\n    grid-column: c0 / c1;\r\n  }\r\n\r\n  .monday::after {\r\n    content: var(--mszgs-timetable-header-label-monday, "Monday");\r\n  }\r\n\r\n  .tuesday {\r\n    grid-row: header;\r\n    grid-column: c1 / c2;\r\n  }\r\n\r\n  .tuesday::after {\r\n    content: var(--mszgs-timetable-header-label-tuesday, "Tuesday");\r\n  }\r\n\r\n  .wednesday {\r\n    grid-row: header;\r\n    grid-column: c2 / c3;\r\n  }\r\n\r\n  .wednesday::after {\r\n    content: var(--mszgs-timetable-header-label-wednesday, "Wednesday");\r\n  }\r\n\r\n  .thursday {\r\n    grid-row: header;\r\n    grid-column: c3 / c4;\r\n  }\r\n\r\n  .thursday::after {\r\n    content: var(--mszgs-timetable-header-label-thursday, "Thursday");\r\n  }\r\n\r\n  .friday {\r\n    grid-row: header;\r\n    grid-column: c4 / c5;\r\n  }\r\n\r\n  .friday::after {\r\n    content: var(--mszgs-timetable-header-label-friday, "Friday");\r\n  }\r\n\r\n  .saturday {\r\n    grid-row: header;\r\n    grid-column: c5 / c6;\r\n  }\r\n\r\n  .saturday::after {\r\n    content: var(--mszgs-timetable-header-label-saturday, "Saturday");\r\n  }\r\n\r\n  .sunday {\r\n    grid-row: header;\r\n    grid-column: c6 / c7;\r\n  }\r\n\r\n  .sunday::after {\r\n    content: var(--mszgs-timetable-header-label-sunday, "Sunday");\r\n  }\r\n\r\n  .grid {\r\n    display: grid;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    background-color: #222;\r\n    color: #eee;\r\n    min-width: var(--mszgs-timetable-min-width, 550px);\r\n    transition: all 1s;\r\n    z-index: 0;\r\n  }\r\n\r\n  div {\r\n    text-align: center;\r\n    position: relative;\r\n  }\r\n\r\n  .contents {\r\n    display: contents;\r\n  }\r\n\r\n  .overflow {\r\n    overflow-x: auto;\r\n  }\r\n\r\n  .grid-line {\r\n    border-top: 1px #fff solid;\r\n    grid-column: start / end;\r\n    z-index: -1;\r\n  }\r\n</style>\r\n<div class="overflow">\r\n  <div class="grid">\r\n    <div id="header" class="contents">\r\n      <div id="monday"    class="header monday"></div>\r\n      <div id="tuesday"   class="header tuesday"></div>\r\n      <div id="wednesday" class="header wednesday"></div>\r\n      <div id="thursday"  class="header thursday"></div>\r\n      <div id="friday"    class="header friday"></div>\r\n      <div id="saturday"  class="header saturday"></div>\r\n      <div id="sunday"    class="header sunday"></div>\r\n    </div>\r\n    <div id="timeline" class="contents">\r\n    </div>\r\n    <div id="items" class="contents">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</div>\r\n');class x{constructor(t){T(this,"_arr",void 0),this._arr=t}isIntersect(t,e){return t.time.isIntersect(e.time)}calc(){const t=this._arr,e=new Array(t.length);t.forEach(((t,r,n)=>{const i=[];n.forEach(((e,r)=>{t!==e&&this.isIntersect(t,e)&&i.push(r)})),e[r]=i}))}}class E extends HTMLElement{static get observedAttributes(){return["data-from","data-to"]}constructor(){super(),T(this,"_changeObserver",void 0),T(this,"_grid",void 0),T(this,"_timeline",void 0),T(this,"_rows",void 0),this.attachShadow({mode:"open"}).appendChild(S.clone()),this._grid=this.shadowRoot.querySelector(".grid"),this._timeline=this.shadowRoot.querySelector("#timeline"),this._rows=new Map,this._changeObserver=new MutationObserver(this.update.bind(this)),this._changeObserver.observe(this,{childList:!0,attributes:!0,attributeFilter:["data-time-start","data-time-end","data-day"],subtree:!0})}add(t){this.appendChild(new _(t))}update(){this.updateTemplateColumns(),this.updateTemplateRows()}updateTemplateColumns(){const t=new y;for(let e=0;e<=this.days;e++){const r=this.items.filter((t=>t.day===o(e))).sort(((t,e)=>m.compare(t.timeStart,e.timeStart)));if(0===r.length){t.addColumn([1]);continue}new x(r).calc();const n=new Map;for(const t of r){const e=new Set;for(const n of r)t.time.isIntersect(n.time)&&e.add(n);n.set(t,e)}const i=new Map;for(const t of r){const e=n.get(t).size;i.set(t,new a(1,0,e))}const s=[...i.values()].map((t=>t.denominator)).concat([1]);t.addColumn(s)}this._grid.style.gridTemplateColumns=t.build()}updateTemplateRows(){const t=new f,e=this.from,r=this.to;void 0!==e&&t.addTime(this.from),void 0!==r&&t.addTime(this.to),this.items.forEach((e=>{t.addTime(e.timeStart),t.addTime(e.timeEnd)})),this._grid.style.gridTemplateRows=t.build(),this.updateRows(t.minTime(),t.maxTime())}updateRows(t,e){this._rows.forEach((t=>t.hide()));for(const r of m.range(t.floor(),e.subtract(m.OneHour))){const t=r.toString();if(this._rows.has(t))this._rows.get(t).show();else{const e=new v(r);this._rows.set(t,e),this._timeline.appendChild(e)}}}attributeChangedCallback(t,e,r){null!==r&&("data-days"===t?this.updateTemplateColumns():"data-from"!==t&&"data-to"!==t||this.updateTemplateRows())}get from(){const t=this.dataset.from;if(void 0!==t)return m.parse(t)}get to(){if(void 0!==this.dataset.to)return m.parse(this.dataset.to)}get days(){return 7}get items(){return Array.from(this.querySelectorAll(_.elementName))}}return T(E,"elementName","mszgs-timetable"),customElements.define(E.elementName,E),e})()}));
//# sourceMappingURL=mszgs.timetable.min.js.map